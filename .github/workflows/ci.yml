name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019, windows-2022]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install .[dev]

    - name: Check Syntax Errors with compileall
      run: |
        python -m compileall src

    - name: Run Linter (pylint)
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          pylint_output=$(pylint src/msftoolbox --exit-zero --output-format=text)
          pylint_score=$(echo "$pylint_output" | grep -oP "Your code has been rated at \K[0-9.]+")
          echo "Pylint score: $pylint_score"
          if (( $(echo "$pylint_score < 6" | bc -l) )); then exit 1; fi
        else
          pylint src/msftoolbox || ( \
          pylint_exit_code=$?; \
          pylint_score=$(pylint src/msftoolbox --exit-zero --output-format=text | grep -o "Your code has been rated at .*" | awk '{print $7}' | awk -F '/' '{print $1}'); \
          echo "Pylint score: $pylint_score"; \
          if (( $(echo "$pylint_score < 6" | bc -l) )); then exit $pylint_exit_code; fi )
        fi
    - name: Run Tests with pytest and Coverage
      run: |
        pytest src/tests
